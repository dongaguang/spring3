<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx.xsd 
                     	http://www.springframework.org/schema/aop 
                     	http://www.springframework.org/schema/aop/spring-aop.xsd"">
                        
	<!-- 扫描bbt下和它子包中的java文件，将标注Spring注解的 类自动转换成Bean，并完成注入-->
	<context:component-scan base-package="bbt" />
	
	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />
	
	<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
	<!-- proxy-target-class="true"  属性值决定是类的代理被创建 -->
	<!-- proxy-target-class="false" 属性值决定是基于接口被创建 -->
	<aop:config proxy-target-class="true">
		<!-- execution() 表达式的主体；
			第一个"*"符号 表示返回值的类型任意；
			bbt.user.service AOP所切的服务的包名，即，我们的业务部分
			包名后面的".."	表示当前包及子包
			第二个"*"	表示类名，*即所有类。此处可以自定义，下文有举例
			.*(..)	表示任何方法名，括号表示参数，两个点表示任何参数类型 -->
		<aop:pointcut id="serviceMethod" expression="execution(* bbt.user.service..*.*(..))" />
	</aop:config>
	
	<!-- 这个事务advice的管理者是transactionManager -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 定义一个使用DBCP实现的数据源  DBCP:数据库连接池 -->
	<bean id="dataSource" class = "org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="712604" />
	</bean>
	
	<!-- 定义jdbc模板Bean -->
	<!-- p:dataSource-ref="dataSounce" 是<property name="dataSounce" ref="dataSounce" />的简化版  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSounce" />
</beans>